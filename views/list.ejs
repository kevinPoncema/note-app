<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Listas de Tareas</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        /* Estilos personalizados */
        @media (min-width: 992px) {
            /* Alinear elementos de búsqueda en el centro en pantallas grandes */
            .search-form {
                margin: auto;
            }
        }
        
        /* Estilo para texto tachado */
        .item-name.false {
            text-decoration: line-through;
        }
    </style>
</head>
<body>

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="#">Listas de Tareas</a>
</nav>

<div class="container mt-4">
    <div class="row">
        <% if (rows && rows.length > 0) { %>
            <% rows.forEach(function(row) { %>
                <div class="col-md-12 mb-4">
                    <div class="card" data-list-id="<%= row.id_list %>">
                        <div class="card-header">
                            <input type="text" class="form-control list-title" value="<%= row.titulo_list %>">
                            <form action="/deleteList/<%= row.id_list %>" method="get" style="display:inline;">
                                <button class="btn btn-danger float-right ml-2" type="submit">Eliminar Lista</button>
                            </form>
                            <button class="btn btn-primary float-right" data-toggle="modal" data-target="#agregarElementoModal" data-list-id="<%= row.id_list %>">Agregar</button>
                        </div>
                        <div class="card-body">
                            <ul class="list-group" id="conElementos<%= row.id_list %>">
                                <!-- Contenido de la lista -->
                                <% 
                                var idNum = 0;
                                if (row.contenido_list && Object.keys(row.contenido_list).length > 0) {
                                    Object.keys(row.contenido_list).forEach(function(key) { %>
                                        <li class="list-group-item" id="ElementoList<%= idNum %>" data-marked="<%= row.contenido_list[key] %>">
                                            <span class="item-name <%= row.contenido_list[key] ? '' : 'false' %>">
                                                <%= key %>
                                            </span>
                                            <button class="btn btn-danger btn-sm float-right ml-2" onclick="eliminarElemento(<%= idNum %>)">-</button>
                                            <button class="btn btn-success btn-sm float-right" onclick="marcarDesmarcarElemento(<%= idNum %>)">
                                                <% if (row.contenido_list[key]) { %>Marcar<% } else { %>Desmarcar<% } %>
                                            </button>
                                        </li>
                                        <% idNum++; %>
                                    <% });
                                } else { %>
                                    <li class="list-group-item no-elements">No hay elementos en la lista.</li>
                                <% } %>
                            </ul>
                        </div>
                        <div class="card-footer">
                            <button class="btn btn-primary btn-sm" onclick="guardarCambios()">Guardar Cambios</button>
                        </div>
                    </div>
                </div>
            <% }); %>
        <% } else { %>
            <div class="col-md-12">
                <p>No hay listas disponibles</p>
            </div>
        <% } %>
    </div>
</div>

<!-- Modal para agregar un elemento -->
<div class="modal fade" id="agregarElementoModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Agregar Elemento</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="agregarElementoForm">
                    <div class="form-group">
                        <label for="elemento">Elemento</label>
                        <input type="text" class="form-control" id="elemento" name="elemento">
                        <input type="hidden" id="modal-list-id">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="agregarElementoLista()">Agregar</button>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
    // Función para eliminar un elemento de la lista
    function eliminarElemento(id) {
        const elemento = document.getElementById('ElementoList' + id);
        if (elemento) {
            elemento.remove();
            console.log('Elemento eliminado con éxito:', id);
        } else {
            console.log('No se encontró el elemento con ID:', id);
        }
    }

    // Función para marcar o desmarcar un elemento de la lista
    function marcarDesmarcarElemento(id) {
        const elemento = document.getElementById('ElementoList' + id);
        const spanElement = document.querySelector('#ElementoList' + id + ' .item-name');
        const buttonElement = document.querySelector('#ElementoList' + id + ' .btn-success');

        if (elemento && spanElement && buttonElement) {
            const isMarked = spanElement.classList.contains('false');
            if (isMarked) {
                spanElement.classList.remove('false');
                buttonElement.innerText = 'Marcar';
            } else {
                spanElement.classList.add('false');
                buttonElement.innerText = 'Desmarcar';
            }
            console.log('Elemento marcado/desmarcado con éxito:', id);
        } else {
            console.log('No se encontró el elemento para marcar/desmarcar con ID:', id);
        }
    }

    // Función para generar un ID aleatorio entre 200 y 700
    function generarIdAleatorio() {
        return Math.floor(Math.random() * (700 - 200 + 1)) + 200;
    }

    // Abrir el modal y configurar la lista de destino
    $('#agregarElementoModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget); // Botón que abrió el modal
        var listId = button.data('list-id'); // Extraer la información de datos

        // Actualizar el ID de la lista en el modal
        var modal = $(this);
        modal.find('#modal-list-id').val(listId);
    });

    // Función para agregar un elemento a la lista
    function agregarElementoLista() {
        const nuevoElemento = document.getElementById('elemento').value;
        if (nuevoElemento.trim() === '') return;

        const listId = document.getElementById('modal-list-id').value;
        const nuevoId = generarIdAleatorio();

        const nuevoLi = document.createElement('li');
        nuevoLi.className = 'list-group-item';
        nuevoLi.id = 'ElementoList' + nuevoId;

        const nuevoSpan = document.createElement('span');
        nuevoSpan.className = 'item-name';
        nuevoSpan.innerText = nuevoElemento;

        const botonEliminar = document.createElement('button');
        botonEliminar.className = 'btn btn-danger btn-sm float-right ml-2';
        botonEliminar.innerText = '-';
        botonEliminar.setAttribute('onclick', 'eliminarElemento(' + nuevoId + ')');

        const botonMarcarDesmarcar = document.createElement('button');
        botonMarcarDesmarcar.className = 'btn btn-success btn-sm float-right';
        botonMarcarDesmarcar.innerText = 'Marcar';
        botonMarcarDesmarcar.setAttribute('onclick', 'marcarDesmarcarElemento(' + nuevoId + ')');

        nuevoLi.appendChild(nuevoSpan);
        nuevoLi.appendChild(botonEliminar);
        nuevoLi.appendChild(botonMarcarDesmarcar);

        const listaElementos = document.getElementById('conElementos' + listId);
        if (listaElementos.querySelector('.no-elements')) {
            listaElementos.innerHTML = '';
        }
        listaElementos.appendChild(nuevoLi);

        $('#agregarElementoModal').modal('hide');
        document.getElementById('agregarElementoForm').reset();
    }

    function getDataObjs() {
        const listTitle = document.querySelector('.list-title').value;
        const listId = document.querySelector('.card').dataset.listId; 
        const listItems = document.querySelectorAll('#conElementos' + listId + ' .list-group-item');
        const dataObj = {
            id_lista: listId,
            titulo: listTitle,
            contenido: {}
        };

        listItems.forEach(item => {
            const itemName = item.querySelector('.item-name').innerText;
            const isMarked = item.querySelector('.item-name').classList.contains('false');
            dataObj.contenido[itemName] = !isMarked;
        });

        return dataObj;
    }

    function guardarCambios() {
        const objeto = getDataObjs();
        const requestOptions = {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(objeto)
        };

        fetch('/updateList', requestOptions)
            .then(response => {
                if (!response.ok) {
                    throw new Error('La respuesta de la red no fue exitosa');
                }
                return response.text();
            })
            .then(message => {
                window.location.href = "http://localhost:3001/mainPages";
            })
            .catch(error => {
                alert('Error al enviar el objeto:', error);
            });
    }
</script>

</body>
</html>
